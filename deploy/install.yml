---
- hosts: 'localhost'
  become: no
  tasks:
    - name: download openjdk tarball
      get_url:
        url: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz
        dest: "./OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz"
        checksum: sha256:6e4cead158037cb7747ca47416474d4f408c9126be5b96f9befd532e0a762b47
      register: openjdk_tarball
    - name: download qpid tarball
      get_url:
        url: http://archive.apache.org/dist/qpid/broker-j/7.1.2/binaries/apache-qpid-broker-j-7.1.2-bin.tar.gz
        dest: "./apache-qpid-broker-j-7.1.2-bin.tar.gz"
        checksum: sha256:b1c5f6e6ee2fd1e93fb40210b6d45d114f439c8b3eda40e3c9149ee75ce50ee9
      register: qpid_tarball
    - name: download nimrod tarball
      get_url:
        url: "{{ nimrod_url }}"
        dest: "./{{ nimrod_package }}.tar"
        checksum: "sha256:{{ nimrod_sha256 }}"
      register: nimrod_tarball

- hosts: 'nimrod_hosts'
  become: no
  vars:
    bin_dir: "{{ root_dir }}/bin"
    java_home: "{{ root_dir }}/lib/jvm/jdk"
    qpid_home: "{{ root_dir }}/opt/qpid-broker"
    nimrod_home: "{{ root_dir }}/opt/{{ nimrod_package }}"
  tasks:
    - name: create folders
      file: path={{ item }} state=directory
      loop: ["{{ root_dir }}", "{{ bin_dir }}", "{{ java_home }}", "{{ qpid_home }}"]
    - name: copy nimrun
      copy:
        src: "{{ nimrun_binary }}"
        dest: "{{ bin_dir }}/nimrun"
        mode: 0755
    - name: extract openjdk tarball
      unarchive:
        src: "{{ hostvars.localhost.openjdk_tarball.dest }}"
        dest: "{{ java_home }}"
        remote_src: no
        creates: "{{ java_home }}/bin/java"
        extra_opts:
          - --strip-components=1
    - name: extract qpid tarball
      unarchive:
        src: "{{ hostvars.localhost.qpid_tarball.dest }}"
        dest: "{{ qpid_home }}"
        remote_src: no
        creates: "{{ qpid_home }}/bin/qpid-server"
        extra_opts:
          - --strip-components=2
    - name: extract nimrod tarball
      unarchive:
        src: "{{ hostvars.localhost.nimrod_tarball.dest }}"
        dest: "{{ root_dir }}/opt"
        remote_src: no
        creates: "{{ nimrod_home }}/bin/nimrod"
    - block:
        - name: create module path (lmod)
          file:
            path: "{{ module_path_lmod }}/{{ nimrun_module_name }}"
            state: directory
          register: module_dir
        - name: generate modulefile (lmod)
          template:
            src: nimrod-embedded.lua.j2
            dest: "{{ module_dir.path }}/{{ nimrod_version }}.lua"
            mode: 0644
        - name: generate nimexec
          template:
            src: nimexec.j2
            dest: "{{ bin_dir }}/nimexec"
            mode: 0755
          vars:
            module_path: "{{ module_path_lmod }}"
      when: module_path_lmod is defined
    - block:
        - name: create module path (modules)
          file:
            path: "{{ module_path_modules }}/{{ nimrun_module_name }}"
            state: directory
          register: module_dir
        - name: generate modulefile (modules)
          template:
            src: nimrod-embedded.j2
            dest: "{{ module_dir.path }}/{{ nimrod_version }}"
            mode: 0644
        - name: generate nimexec
          template:
            src: nimexec.j2
            dest: "{{ bin_dir }}/nimexec"
            mode: 0755
          vars:
            module_path: "{{ module_path_modules }}"
      when: module_path_modules is defined
